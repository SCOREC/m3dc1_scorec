*******************************************************************
PREP: SET ENVIRONMENT (modify as needed)
*******************************************************************
export PREFIX="the install directory"
export MPIHOME=/usr/local/openmpi/latest
export PETSC_DIR=/lore/fzhang/petsc-real/petsc-3.5.1
export PETSC_ARCH=test
export ZOLTAN_HOME=/usr/local/zoltan/latest/openmpi1.6.5_gcc4.4.5
export PARMETIS_HOME=/usr/local/parmetis/latest/openmpi1.6.5_gcc4.4.5_dbg

*******************************************************************
STEP 1: INSTALL SCOREC TOOLS
*******************************************************************
cd $PREFIX
git clone https://github.com/SCOREC/core.git
cd $PREFIX/core
edit config.sh (see example below)

cmake .. \
  -DCMAKE_C_COMPILER="$MPIHOME/bin/mpicc" \
  -DCMAKE_CXX_COMPILER="$MPIHOME/bin/mpicxx" \
  -DCMAKE_C_FLAGS=" -g -O2" \
  -DCMAKE_CXX_FLAGS=" -g -O2" \
  -DENABLE_THREADS=ON \
  -DENABLE_ZOLTAN=ON \
  -DZOLTAN_INCLUDE_DIR="$ZOLTAN_HOME/include" \
  -DZOLTAN_LIBRARY="$ZOLTAN_HOME/lib" \
  -DPARMETIS_INCLUDE_DIR="$PARMETIS_HOME/include" \
  -DPARMETIS_LIBRARY="$PARMETIS_HOME/lib" \
  -DMETIS_LIBRARY="$PARMETIS_HOME/lib" \
  -DCMAKE_INSTALL_PREFIX="$PREFIX" \
  -DCMAKE_BUILD_TYPE=Debug

mkdir build
cd $PREFIX/core/build
../config.sh
make -j
make install

* To update code, do "git pull" from $PREFIX/core

*******************************************************************
STEP 2: INSTALL M3DC1-SCOREC
*******************************************************************
cd $PREFIX
svn co http://redmine.scorec.rpi.edu/svn/pafs/trunk m3dc1_scorec
cd m3dc1_scorec
edit config.sh (see example with Trilinos below)

/usr/local/cmake/2.8.0/bin/cmake .. \
  -DCMAKE_C_COMPILER="/usr/local/openmpi/latest/bin/mpicc" \
  -DCMAKE_CXX_COMPILER="/usr/local/openmpi/latest/bin/mpicxx" \
  -DCMAKE_Fortran_COMPILER="/usr/local/openmpi/latest/bin/mpif90" \
  -DCMAKE_C_FLAGS=" -g -O2 -DDEBUG -I/lore/fzhang/petsc-real/petsc-3.5.1/include" \
  -DCMAKE_CXX_FLAGS=" -g -O2 -DDEBUG -I/lore/fzhang/petsc-real/petsc-3.5.1/include" \
  -DCMAKE_Fortran_FLAGS="-fpic "\
  -DENABLE_COMPLEX=OFF \
  -DSCOREC_INCLUDE_DIR="/users/seol/develop/include" \
  -DSCOREC_LIB_DIR="/users/seol/develop/lib" \
  -DZOLTAN_LIBRARY="/usr/local/zoltan/latest/openmpi1.6.5_gcc4.4.5/lib/libzoltan.a" \
  -DPARMETIS_LIBRARY="/usr/local/parmetis/latest/openmpi1.6.5_gcc4.4.5_dbg/lib/libparmetis.a" \
  -DMETIS_LIBRARY="/usr/local/parmetis/latest/openmpi1.6.5_gcc4.4.5_dbg/lib/libmetis.a" \
  -DPETSC_INCLUDE_DIR="/lore/fzhang/petsc-real/petsc-3.5.1/include" \
  -DPETSC_LIB_DIR="/lore/fzhang/petsc-real/petsc-3.5.1/test/lib" \
  -DHDF5_INCLUDE_DIR="/lore/fzhang/petsc-real/petsc-3.5.1/test/include" \
  -DHDF5_LIB_DIR="/lore/fzhang/petsc-real/petsc-3.5.1/test/lib" \
  -DENABLE_MESHGEN=OFF \
  -DSIMMETRIX_INCLUDE_DIR=/net/common/meshSim/latest/include \
  -DSIMMETRIX_LIB_DIR=/net/common/meshSim/latest/lib/x64_rhel5_gcc41 \
  -DENABLE_TRILINOS=ON \
  -DTRILINOS_INCLUDE_DIR="/usr/local/trilinos/latest/include" \
  -DTRILINOS_LIB_DIR="/usr/local/trilinos/latest/lib" \
  -DLAPACK_LIB_DIR="/users/seol/develop/lib" \
  -DBOOST_LIB_DIR="/users/granzb/lib" \
  -DENABLE_TESTING=OFF \
  -DCMAKE_BUILD_TYPE=Debug \
  -DCMAKE_INSTALL_PREFIX="/users/seol/develop"

mkdir build
cd build 
../config.sh
make -j
make install

* To update code, do "svn update" from $PREFIX/m3dc1_scorec

*******************************************************************
STEP 3: COMPILE TEST PROGRAM
*******************************************************************
Test 1: test/epetra - if ENABLE_TRILINOS=ON, testing epetra/aztec and epetra/amesos2 with superlu_dist/mumps
Test 2: test/solver - testing petsc.  if ENABLE_TRILINOS=ON, testing epetra/aztec
Test 3: test/convert_polar - testing meshing with the file "POLAR" (generated by PPPL program)

In config.sh, set -DENABLE_TESTING to ON and compile

To run, from build directory:
[SCOREC MACHINES]
/usr/local/openmpi/latest/bin/mpirun -np 2 ./epetra ../test/2p/AnalyticModel ../test/2p/test.smb 1 superlu-dist
/usr/local/openmpi/latest/bin/mpirun -np 32 ./epetra ../test/AnalyticModel ../test/1K-4part/part.smb 8
/usr/local/openmpi/latest/bin/mpirun -np 4 ./solver ../test/AnalyticModel ../test/1K-4part/part.smb 1 -on_error_abort

/usr/local/openmpi/latest/bin/mpirun -np 1 ./convert_polar ../test/jsolver/POLAR

[NERSC Edison]
qsub -I -q debug -l mppwidth=32
cd $PBS_O_WORKDIR
aprun -n 2 ./epetra ../test/2p/AnalyticModel ../test/2p/test.smb 1 mumps 
aprun -n 32 ./solver ../test/AnalyticModel ../test/1K-4part/part.smb 8
aprun -n 4 ./solver ../test/AnalyticModel ../test/1K-4part/part.smb 1 -on_error_abort

*******************************************************************
 SVN REPO MANAGEMENT
*******************************************************************
// creating a branch
svn copy http://redmine.scorec.rpi.edu/svn/pafs/trunk http://redmine.scorec.rpi.edu/svn/pafs/branches/epetra_dev 
  -m "creating a branch for epetra development"

//merging trunk to branch
svn merge http://redmine.scorec.rpi.edu/svn/pafs/branches/epetra_dev http://redmine.scorec.rpi.edu/svn/pafs/trunk


